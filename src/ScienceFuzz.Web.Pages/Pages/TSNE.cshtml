@page
@model TSNEModel
@{
    ViewData["Title"] = "T-SNE";
}

@section CSS
{
    <link href="~/assets/css/loader.css" rel="stylesheet" />
}



@if (!Model.Calculate)
{
    <div class="container" style="        margin-top: 10px">
        <section>
            <h2>Przykładowe użycie algorytmu T-SNE</h2>
            <p>Program działa na podstawie wcześniej przygotowanych danych:</p>
            <img src="~/assets/tut.png" style="        padding: 10px" />
            <p>
                Najpierw obliczany jest T-SNE dla pojedynczych naukowców, a następnie powielamy każdego naukowca 10-krotnie i dodajemy/odejmujemy wartość każdej jego dziedziny o <strong>0.1</strong>,
                aby powstały grupy 10 osobowe o bardzo zbliżonych kontrybucjach.
            </p>
        </section>
        <form method="post" class="text-center">
            <button type="submit" class="btn btn-lg btn-primary">Oblicz</button>
        </form>
    </div>
}
else
{
    <div class="container" style="        margin-top: 10px;
        padding: 20px">
        <div class="loader text-center">
            <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
            <h4>Obliczanie ...</h4>
            <h5>To może chwilę potrwać</h5>
        </div>
        <div>
            <canvas class="tsne-person-chart"></canvas>
        </div>
        <div style="        margin-top: 50px">
            <canvas class="tsne-group-chart"></canvas>
        </div>
    </div>
}



@section Scripts
{
    <script src="assets/js/tsne.js"></script>
    <script src="assets/js/chart.js"></script>
    <script src="assets/js/tsne-chart.js"></script>
    <script>

        function hideLoader() {
            $('.loader').css('display', 'none');
        };

        function randColor() {
            var r = Math.random() * 255;
            var g = Math.random() * 255;
            var b = Math.random() * 255;

            var color = 'rgba(' + r + ', ' + g + ', ' + b + ', 0.5)';
            var hover = 'rgba(' + r + ', ' + g + ', ' + b + ', 0.8)';

            return {
                color: color,
                hover: hover
            };
        }



        function personData_to_groupData(personData, amount) {
            var result = new Array();

            for (var i = 0; i < personData.length; i++) {

                var dataset = {};
                dataset.label = personData[i].label;
                dataset.data = new Array();

                for (var j = 0; j < amount; j++) {
                    var temp = new Array();

                    for (var k = 0; k < personData[i].data.length; k++) {
                        var plusMinus = Math.random() * 2 + 1;
                        var randValue = Math.random() / 10;

                        if (plusMinus == 2) {
                            temp.push(personData[i].data[k] + randValue);
                        }
                        else {
                            temp.push(personData[i].data[k] - randValue);
                        }
                    }

                    dataset.data.push(temp);
                }

                result.push(dataset);
            }

            return result;
        };



        function testData_to_dists(testData) {
            var arr = new Array();

            testData.forEach(function (test) {
                arr.push(test.data);
            });

            return arr;
        };

        function solution_to_chartData(testData, solutionData) {
            var arr = new Array();

            for (var i = 0; i < testData.length; i++) {
                var colors = randColor();

                arr.push({
                    label: testData[i].label,
                    data: [{ x: solutionData[i][0], y: solutionData[i][1], r: 10 }],
                    backgroundColor: colors.color,
                    hoverBackgroundColor: colors.hover
                });
            }

            return arr;
        };



        function groupData_to_dists(groupData) {
            var arr = new Array();

            groupData.forEach(function (test) {
                test.data.forEach(function (x) {
                    arr.push(x);
                });
            });

            return arr;
        };

        function solution_to_groupChartData(groupData, solutionData) {
            var result = new Array();

            for (var i = 0; i < groupData.length; i++) {

                var colors = randColor();

                var dataset = {};
                dataset.label = groupData[i].label + ' x ' + groupData.length;
                dataset.backgroundColor = colors.color;
                dataset.hoverBackgroundColor = colors.hover;
                dataset.data = new Array();

                for (var j = i * groupData.length; j < i * groupData.length + groupData.length; j++) {
                    dataset.data.push({
                        x: solutionData[j][0],
                        y: solutionData[j][1],
                        r: 2
                    });
                }

                result.push(dataset);
            }

            return result;
        };



        $(document).ready(function () {
            if ('@(Model.Calculate)' === '@true') {
                    var personData = [
                    {
                        label: 'WD',
                        data: [0.0346, 0.068, 0.1206, 0.009, 0.5625, 0.0355, 0, 0]
                    },
                    {
                        label: 'Informatyk fizyk',
                        data: [0.01, 0, 0.005, 0.0442, 0.4245, 0.0585, 0, 0.01]
                    },
                    {
                        label: 'Fizyk',
                        data: [0, 0, 0.067, 0.1263, 0.3624, 0.1171, 0, 0.238]
                    },
                    {
                        label: 'Historyk sztuki',
                        data: [0.258, 0, 0.004, 0.0248, 0, 0, 0.0125, 0.115]
                    },
                    {
                        label: 'Archeolog',
                        data: [0.2229, 0.0284, 0.01, 0, 0, 0.1604, 0.002, 0]
                    },
                    {
                        label: 'OS',
                        data: [0, 0, 0.1416, 0, 0.005, 0.01, 0, 0]
                    },
                    {
                        label: 'Pedagog politolog',
                        data: [0.0773, 0.1595, 0.0743, 0, 0, 0, 0, 0]
                    },
                    {
                        label: 'Biolog',
                        data: [0.005, 0.0199, 0.3831, 0.039, 0.0631, 0.316, 0, 0.059]
                    },
                    {
                        label: 'Rehabilitant',
                        data: [0.0374, 0.1109, 0.5445, 0, 0, 0.0394, 0, 0]
                    },
                    {
                        label: 'Chemik',
                        data: [0.0109, 0.0509, 0.3681, 0.4479, 0.974, 0.9029, 0.1313, 0]
                    }
                ];




                var opt = {};
                opt.epsilon = 10;
                opt.perplexity = 3;
                opt.dim = 2;



                var tsne = new tsnejs.tSNE(opt);
                var dists = testData_to_dists(personData);
                tsne.initDataRaw(dists);

                for (var k = 0; k < 10000; k++) {
                    tsne.step();
                }

                var solution = tsne.getSolution();
                var chartData = solution_to_chartData(personData, solution);
                initChart('tsne-person-chart', 'T-SNE dla pojedynczych naukowców', chartData);



                var groupData = personData_to_groupData(personData, 10);
                tsne = new tsnejs.tSNE(opt);
                dists = groupData_to_dists(groupData);
                tsne.initDataRaw(dists);

                for (var k = 0; k < 10000; k++) {
                    tsne.step();
                }

                solution = tsne.getSolution();
                console.log('SOLUTION: ', solution);
                var chartData = solution_to_groupChartData(groupData, solution);
                initChart('tsne-group-chart', 'T-SNE dla grup naukowców z bardzo podobnymi kontrybucjami (+/- 0.1 w każdej dziedzinie)', chartData);



                hideLoader();
            }
        });
    </script>
}