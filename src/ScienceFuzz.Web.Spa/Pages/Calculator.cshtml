@page "/Calculator"
@inject State State;
@inject IJSRuntime JS;

<main class="container-fluid calculator-main-content">
    <div class="row">
        <div class="col col-12 col-lg-6">
            <section class="shadow-lg publication">
                <div>
                    <form>
                        <div class="form-group">
                            <label class="publication-label">Description</label>
                            <textarea class="form-control"></textarea>
                        </div>
                        <div class="form-group">
                            <label class="publication-label">Scientific domains</label>
                            <div class="form-row">
                                <div class="col">
                                    <div class="form-check"><label class="form-check-label"><input class="form-check-input" type="checkbox"> <i class="fas fa-wrench"></i>&nbsp;Technology</label></div>
                                    <div class="form-check"><label class="form-check-label"><input class="form-check-input" type="checkbox"> <i class="fas fa-medkit"></i>&nbsp;Health</label></div>
                                    <div class="form-check"><label class="form-check-label"><input class="form-check-input" type="checkbox"> <i class="fas fa-search"></i>&nbsp;Exact</label></div>
                                    <div class="form-check"><label class="form-check-label"><input class="form-check-input" type="checkbox"> <i class="fas fa-cloud-sun-rain"></i>&nbsp;Natural</label></div>
                                </div>
                                <div class="col">
                                    <div class="form-check"><label class="form-check-label"><input class="form-check-input" type="checkbox"> <i class="fas fa-book"></i>&nbsp;Humanities</label></div>
                                    <div class="form-check"><label class="form-check-label"><input class="form-check-input" type="checkbox"> <i class="fas fa-landmark"></i>&nbsp;Arts</label></div>
                                    <div class="form-check"><label class="form-check-label"><input class="form-check-input" type="checkbox"> <i class="fas fa-users"></i>&nbsp;Social</label></div>
                                    <div class="form-check"><label class="form-check-label"><input class="form-check-input" type="checkbox"> <i class="fas fa-leaf"></i>&nbsp;Agriculture</label></div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="publication-label">Scientific disciplines</label>
                            <p>-</p>
                        </div>
                        <div class="form-group">
                            <label class="publication-label">Scientific journals</label>
                            <p>-</p>
                        </div>
                    </form>
                </div>
            </section>
            <section class="add-publication-section">
                <section>
                    <div class="row">
                        <div class="col col-2"></div>
                        <div class="col col-8 align-self-center">
                            <button class="btn btn-success btn-block" type="button" onclick="@UpdateChartAsync"><i class="fas fa-plus"></i>Add publication</button>
                        </div>
                        <div class="col col-2"></div>
                    </div>
                </section>
            </section>
        </div>
        <div class="col col-12 col-lg-6">
            <section class="chart">
                <div class="chart-display"><canvas id="results-chart"></canvas></div>
            </section>
        </div>
    </div>
</main>

@functions
{
    private bool ChartInitialized = false;

    protected override async Task OnAfterRenderAsync()
    {
        if (!ChartInitialized)
        {
            await JS.InvokeAsync<string>("initChart");
            ChartInitialized = true;
        }
    }

    private async Task UpdateChartAsync()
    {
        var rand = new Random();
        var data = new double[]
        {
    rand.NextDouble(),
    rand.NextDouble(),
    rand.NextDouble(),
    rand.NextDouble(),
    rand.NextDouble(),
    rand.NextDouble(),
    rand.NextDouble(),
    rand.NextDouble()
                                };
        await JS.InvokeAsync<string>("updateChart", data);
        StateHasChanged();
    }
}
